// Generated by Dagger (https://dagger.dev).
package com.fatherofapps.androidbase.di;

import com.fatherofapps.androidbase.data.apis.FastForexAPI;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import retrofit2.Retrofit;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class NetworkModule_ProvideFastForexAPIFactory implements Factory<FastForexAPI> {
  private final NetworkModule module;

  private final Provider<Retrofit> retrofitProvider;

  public NetworkModule_ProvideFastForexAPIFactory(NetworkModule module,
      Provider<Retrofit> retrofitProvider) {
    this.module = module;
    this.retrofitProvider = retrofitProvider;
  }

  @Override
  public FastForexAPI get() {
    return provideFastForexAPI(module, retrofitProvider.get());
  }

  public static NetworkModule_ProvideFastForexAPIFactory create(NetworkModule module,
      Provider<Retrofit> retrofitProvider) {
    return new NetworkModule_ProvideFastForexAPIFactory(module, retrofitProvider);
  }

  public static FastForexAPI provideFastForexAPI(NetworkModule instance, Retrofit retrofit) {
    return Preconditions.checkNotNullFromProvides(instance.provideFastForexAPI(retrofit));
  }
}
