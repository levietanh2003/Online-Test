// Generated by Dagger (https://dagger.dev).
package com.fatherofapps.androidbase.di;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import kotlinx.coroutines.CoroutineDispatcher;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class CoroutinesDispatchersModule_ProvidesDefaultDispatcherFactory implements Factory<CoroutineDispatcher> {
  @Override
  public CoroutineDispatcher get() {
    return providesDefaultDispatcher();
  }

  public static CoroutinesDispatchersModule_ProvidesDefaultDispatcherFactory create() {
    return InstanceHolder.INSTANCE;
  }

  public static CoroutineDispatcher providesDefaultDispatcher() {
    return Preconditions.checkNotNullFromProvides(CoroutinesDispatchersModule.INSTANCE.providesDefaultDispatcher());
  }

  private static final class InstanceHolder {
    private static final CoroutinesDispatchersModule_ProvidesDefaultDispatcherFactory INSTANCE = new CoroutinesDispatchersModule_ProvidesDefaultDispatcherFactory();
  }
}
